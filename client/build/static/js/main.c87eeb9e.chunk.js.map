{"version":3,"sources":["services/api.js","components/Canvass.js","components/Home.js","components/GetImages.js","components/Router.js","App.js","reportWebVitals.js","index.js"],"names":["adddata","imageName","imageCrs","Promise","resolve","reject","fd","FormData","append","console","log","fetch","method","body","then","response","status","json","data","catch","error","Error","generator","rough","createElement","id","x1","y1","x2","y2","type","roughElement","line","rectangle","nearPoint","x","y","name","Math","abs","positionWithinElement","element","topLeft","topRight","bottomLeft","bottomRight","a","b","c","offset","distance","start","end","inside","sqrt","pow","getElementAtPosition","elements","map","position","find","Canvass","props","initialState","useState","index","setIndex","history","setHistory","action","overwrite","newState","historyCopy","updatedState","slice","prevState","length","useHistory","setElements","undo","redo","setAction","tool","setTool","selectedElement","setSelectedElement","dataImg","Img","state","setState","useLayoutEffect","canvas","document","getElementById","getContext","clearRect","width","height","roughCanvas","forEach","draw","img","useEffect","undoRedoFunction","event","metaKey","ctrlKey","key","shiftKey","addEventListener","removeEventListener","updateElement","updatedElement","elementsCopy","style","checked","onChange","htmlFor","bottom","padding","onClick","className","backgroundImage","onMouseDown","clientX","clientY","offsetX","offsetY","onMouseMove","target","cursor","cursorForPosition","newX1","newY1","coordinates","resizedCoordinates","onMouseUp","minX","min","maxX","max","adjustElementCoordinates","e","value","onSubmit","preventDefault","dat","alert","encType","placeholder","variant","Home","onSelectFile","files","reader","FileReader","src","result","readAsDataURL","onImageLoaded","image","imageRef","onCropComplete","crop","makeClientCrop","onCropChange","percentCrop","handleChange","bind","saveBtnClick","ImageUrl","Imag","base64Image","unit","aspect","this","push","getCroppedImg","croppedImageUrl","fileName","scaleX","naturalWidth","scaleY","naturalHeight","ctx","drawImage","toBlob","blob","toDataURL","window","URL","revokeObjectURL","fileUrl","anchor","download","href","createObjectURL","Container","maxWidth","Box","sx","flexGrow","overflow","px","Paper","my","mx","p","Card","container","wrap","spacing","Grid","item","xs","Input","accept","multiple","Button","component","gridArea","CardMedia","ruleOfThirds","onComplete","alt","TextField","required","label","defaultValue","Component","GetImages","headers","imgs","dataElement","images","Key","CardHeader","title","GridList","cellHeight","marginLeft","Link","Router","path","exact","App","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c87eeb9e.chunk.js","sourcesContent":["export const adddata=(imageName,imageCrs)=>{\r\n    \r\n    return new Promise((resolve, reject)=>{\r\n        const fd = new FormData()\r\n        fd.append('imageName', imageName)\r\n        fd.append('imageCrs', imageCrs)\r\n      console.log('sendD',fd);\r\n        fetch('/addimg',{\r\n            method:'POST',\r\n           \r\n            body:fd\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                response.json().then(data => {\r\n                   console.log(data);\r\n                    resolve(data)\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            }else{\r\n                reject(new Error('can not send data to server. response number is :'+response.status))\r\n            }\r\n        }).catch(error => {\r\n            reject(error)\r\n        })\r\n\r\n    })\r\n    \r\n}\r\nexport const Getdata=()=>{\r\n    return new Promise((resolve, reject)=>{\r\n     fetch('/getdata',{\r\n         method:'POST',\r\n         headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n     }).then(response => {\r\n        if (response.status === 200) {\r\n            response.json().then(data => {\r\n               console.log('api',data);\r\n                resolve(data)\r\n            }).catch(error => {\r\n                reject(error)\r\n            })\r\n        }else{\r\n            reject(new Error('can not send data to server. response number is :'+response.status))\r\n        }\r\n    }).catch(error => {\r\n        reject(error)\r\n    })\r\n})\r\n    }\r\n\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport rough from \"roughjs/bundled/rough.esm\";\r\nimport {Getdata} from '../services/api'\r\nimport '../App.css';\r\nimport {adddata} from '../services/api'\r\nconst generator = rough.generator();\r\n\r\nconst createElement = (id, x1, y1, x2, y2, type) => {\r\n  const roughElement =\r\n    type === \"line\"\r\n      ? generator.line(x1, y1, x2, y2)\r\n      : generator.rectangle(x1, y1, x2 - x1, y2 - y1);\r\n  return { id, x1, y1, x2, y2, type, roughElement };\r\n};\r\n\r\nconst nearPoint = (x, y, x1, y1, name) => {\r\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\r\n};\r\n\r\nconst positionWithinElement = (x, y, element) => {\r\n  const { type, x1, x2, y1, y2 } = element;\r\n  if (type === \"rectangle\") {\r\n    const topLeft = nearPoint(x, y, x1, y1, \"tl\");\r\n    const topRight = nearPoint(x, y, x2, y1, \"tr\");\r\n    const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\r\n    const bottomRight = nearPoint(x, y, x2, y2, \"br\");\r\n    const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\r\n    return topLeft || topRight || bottomLeft || bottomRight || inside;\r\n  } else {\r\n    const a = { x: x1, y: y1 };\r\n    const b = { x: x2, y: y2 };\r\n    const c = { x, y };\r\n    const offset = distance(a, b) - (distance(a, c) + distance(b, c));\r\n    const start = nearPoint(x, y, x1, y1, \"start\");\r\n    const end = nearPoint(x, y, x2, y2, \"end\");\r\n    const inside = Math.abs(offset) < 1 ? \"inside\" : null;\r\n    return start || end || inside;\r\n  }\r\n};\r\n\r\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\r\n\r\nconst getElementAtPosition = (x, y, elements) => {\r\n  return elements\r\n    .map(element => ({ ...element, position: positionWithinElement(x, y, element) }))\r\n    .find(element => element.position !== null);\r\n};\r\n\r\nconst adjustElementCoordinates = element => {\r\n  const { type, x1, y1, x2, y2 } = element;\r\n  if (type === \"rectangle\") {\r\n    const minX = Math.min(x1, x2);\r\n    const maxX = Math.max(x1, x2);\r\n    const minY = Math.min(y1, y2);\r\n    const maxY = Math.max(y1, y2);\r\n    return { x1: minX, y1: minY, x2: maxX, y2: maxY };\r\n  } else {\r\n    if (x1 < x2 || (x1 === x2 && y1 < y2)) {\r\n      return { x1, y1, x2, y2 };\r\n    } else {\r\n      return { x1: x2, y1: y2, x2: x1, y2: y1 };\r\n    }\r\n  }\r\n};\r\n\r\nconst cursorForPosition = position => {\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"br\":\r\n    case \"start\":\r\n    case \"end\":\r\n      return \"nwse-resize\";\r\n    case \"tr\":\r\n    case \"bl\":\r\n      return \"nesw-resize\";\r\n    default:\r\n      return \"move\";\r\n  }\r\n};\r\n\r\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\r\n  const { x1, y1, x2, y2 } = coordinates;\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"start\":\r\n      return { x1: clientX, y1: clientY, x2, y2 };\r\n    case \"tr\":\r\n      return { x1, y1: clientY, x2: clientX, y2 };\r\n    case \"bl\":\r\n      return { x1: clientX, y1, x2, y2: clientY };\r\n    case \"br\":\r\n    case \"end\":\r\n      return { x1, y1, x2: clientX, y2: clientY };\r\n    default:\r\n      return null; //should not really get here...\r\n  }\r\n};\r\n\r\nconst useHistory = initialState => {\r\n  const [index, setIndex] = useState(0);\r\n  const [history, setHistory] = useState([initialState]);\r\n\r\n  const setState = (action, overwrite = false) => {\r\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\r\n    if (overwrite) {\r\n      const historyCopy = [...history];\r\n      historyCopy[index] = newState;\r\n      setHistory(historyCopy);\r\n    } else {\r\n      const updatedState = [...history].slice(0, index + 1);\r\n      setHistory([...updatedState, newState]);\r\n      setIndex(prevState => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\r\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\r\n\r\n  return [history[index], setState, undo, redo];\r\n};\r\n\r\nconst Canvass = (props) => {\r\n  const [elements, setElements, undo, redo] = useHistory([]);\r\n  const [action, setAction] = useState(\"none\");\r\n  const [tool, setTool] = useState(\"line\");\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const intialState={\r\n    dataImg:'',\r\n    Img:[],\r\n    name:''\r\n  }\r\nconst [state,setState] = useState(intialState)\r\n  useLayoutEffect(() => {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const roughCanvas = rough.canvas(canvas);\r\n\r\n    elements.forEach(({ roughElement }) => roughCanvas.draw(roughElement));\r\n  }, [elements]);\r\n//   useEffect(()=>{\r\n//     Getdata().then(data=>{\r\n//         console.log(data);\r\n//             data.map(item=>{\r\n//                 setState({\r\n//                     ...state,\r\n//                     img: item.imgs,\r\n//                     })\r\n//     })\r\n//   })\r\n// },[])\r\n\r\nconsole.log(state.img,state.name);\r\n  useEffect(() => {\r\n    const undoRedoFunction = event => {\r\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\r\n        if (event.shiftKey) {\r\n          redo();\r\n        } else {\r\n          undo();\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", undoRedoFunction);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", undoRedoFunction);\r\n    };\r\n  }, [undo, redo]);\r\n\r\n  const updateElement = (id, x1, y1, x2, y2, type) => {\r\n    const updatedElement = createElement(id, x1, y1, x2, y2, type);\r\n\r\n    const elementsCopy = [...elements];\r\n    elementsCopy[id] = updatedElement;\r\n    setElements(elementsCopy, true);\r\n  };\r\n\r\n  const handleMouseDown = event => {\r\n    const { clientX, clientY } = event;\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      if (element) {\r\n        const offsetX = clientX - element.x1;\r\n        const offsetY = clientY - element.y1;\r\n        setSelectedElement({ ...element, offsetX, offsetY });\r\n        setElements(prevState => prevState);\r\n\r\n        if (element.position === \"inside\") {\r\n          setAction(\"moving\");\r\n        } else {\r\n          setAction(\"resizing\");\r\n        }\r\n      }\r\n    } else {\r\n      const id = elements.length;\r\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\r\n      setElements(prevState => [...prevState, element]);\r\n      setSelectedElement(element);\r\n\r\n      setAction(\"drawing\");\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = event => {\r\n    const { clientX, clientY } = event;\r\n\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      event.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\r\n    }\r\n\r\n    if (action === \"drawing\") {\r\n      const index = elements.length - 1;\r\n      const { x1, y1 } = elements[index];\r\n      updateElement(index, x1, y1, clientX, clientY, tool);\r\n    } else if (action === \"moving\") {\r\n      const { id, x1, x2, y1, y2, type, offsetX, offsetY } = selectedElement;\r\n      const width = x2 - x1;\r\n      const height = y2 - y1;\r\n      const newX1 = clientX - offsetX;\r\n      const newY1 = clientY - offsetY;\r\n      updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type);\r\n    } else if (action === \"resizing\") {\r\n      const { id, type, position, ...coordinates } = selectedElement;\r\n      const { x1, y1, x2, y2 } = resizedCoordinates(clientX, clientY, position, coordinates);\r\n      updateElement(id, x1, y1, x2, y2, type);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (selectedElement) {\r\n      const index = selectedElement.id;\r\n      const { id, type } = elements[index];\r\n      if (action === \"drawing\" || action === \"resizing\") {\r\n        const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\r\n        updateElement(id, x1, y1, x2, y2, type);\r\n      }\r\n    }\r\n    setAction(\"none\");\r\n    setSelectedElement(null);\r\n  };\r\n const saveBtnClick = (e)=>{ \r\n    e.preventDefault()\r\n    console.log('vv',state.name,state.img);\r\n    adddata( state.name,state.img).then(dat=>{\r\n      console.log(dat);\r\n      if (dat===1) {\r\n        \r\n        alert('exist')\r\n      }\r\n      if (dat===2) {\r\n        alert(' server error 3')\r\n      } else {\r\n        \r\n      }\r\n     \r\n  }).catch(error => {\r\n    console.log(error);\r\n})\r\n\r\n}  \r\nconsole.log('props',props);\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"fixed\" }}>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"selection\"\r\n          checked={tool === \"selection\"}\r\n          onChange={() => setTool(\"selection\")}\r\n        />\r\n        <label htmlFor=\"selection\">Selection</label>\r\n        <input type=\"radio\" id=\"line\" checked={tool === \"line\"} onChange={() => setTool(\"line\")} />\r\n        <label htmlFor=\"line\">Line</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"rectangle\"\r\n          checked={tool === \"rectangle\"}\r\n          onChange={() => setTool(\"rectangle\")}\r\n        />\r\n        <label htmlFor=\"rectangle\">Rectangle</label>\r\n      </div>\r\n      <div style={{ position: \"fixed\", bottom: 0, padding: 10 }}>\r\n        <button onClick={undo}>Undo</button>\r\n        <button onClick={redo}>Redo</button>\r\n      </div>\r\n      <div className='canvas-parent'>  \r\n      <canvas\r\n        id=\"canvas\"\r\n        className='backgrund'\r\n        style={{backgroundImage:`url(${props.img} )` }}\r\n        width='220'\r\n        height='120'\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onChange={(e) => {setState({...state, img: e.target.value})}}\r\n      >\r\n         \r\n        Canvas\r\n      </canvas>\r\n     \r\n      </div>\r\n      <form onSubmit={saveBtnClick} encType='multipart/form-data'>\r\n      <input type=\"text\" className=\"form-control\"\r\n                        placeholder=\"Name *\" \r\n                      onChange={(e) => {setState({...state, name: e.target.value})}} />\r\n                    \r\n      <button type=\"submit\" variant=\"contained\">Submit</button>\r\n      </form>\r\n      {/* <img  style={{ maxWidth: '500%' }} src={state.img}  /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvass;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport {Container, CardMedia,Card,Input,TextField,Button,Grid,Paper,Box} from '@material-ui/core';\r\nimport {adddata} from '../services/api'\r\nimport Canvass from './Canvass'\r\n\r\n\r\nclass Home extends Component {\r\n    constructor (props) {\r\n\t\tsuper(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.saveBtnClick = this.saveBtnClick.bind(this);\r\n   \r\n        this.state = {\r\n    src: null,\r\n    imageName:'',\r\n    ImageUrl:[],\r\n    Imag:[],\r\n    base64Image:'',\r\n    crop: {\r\n      unit: '%',\r\n      width: 30,\r\n      aspect: 16 / 9,\r\n    },\r\n  };\r\n};\r\n  handleChange(event) {\r\n    this.setState({imageName: event.target.value});\r\n  }\r\n  \r\n \r\n   saveBtnClick (e){\r\n    e.preventDefault()\r\n    console.log('vv',this.state.imageName,this.state.base64Image);\r\n    adddata( this.state.imageName,this.state.base64Image).then(dat=>{\r\n      console.log(dat);\r\n      if (dat===1) {\r\n        this.props.history.push('/GetImages') \r\n        alert('exist')\r\n      }\r\n      if (dat===2) {\r\n        alert(' server error 3')\r\n      } else {\r\n        \r\n      }\r\n     \r\n  }).catch(error => {\r\n    console.log(error);\r\n})\r\n\r\n}  \r\n\r\n\r\n  onSelectFile = e => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // If you setState the crop in here you should return false.\r\n  onImageLoaded = image => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = crop => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n      this.setState({ImageUrl: croppedImageUrl});\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width*4;\r\n    canvas.height = crop.height*4;\r\n    const ctx = canvas.getContext('2d');\r\nconsole.log('canvas',canvas);\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width*4,\r\n      crop.height*4\r\n    );\r\n    console.log('crop',this.state.crop);\r\n    // console.log( this.state.imageName,this.state.ImageUrl);\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          console.error('Canvas is empty');\r\n          return;\r\n        }\r\n        const base64Image = canvas.toDataURL('image/jpeg');\r\n        this.setState({base64Image: base64Image});\r\n        blob.name = fileName;\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n        const anchor = document.createElement('a');\r\n        anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      \r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        this.setState({Imag: anchor});\r\n        resolve( this.fileUrl);\r\n      }, 'image/jpeg');\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { crop, base64Image, src } = this.state;\r\n\r\n    return (\r\n      <div>  <Canvass img ={base64Image}\r\n      \r\n      />   \r\n<Container maxWidth=\"sm\" className='mr-t'>  \r\n\r\n  <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3}} className='mr-l'>\r\n    <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }} >\r\n      <Card container wrap=\"nowrap\" spacing={2}>\r\n      <Grid item xs={4}>\r\n       <label htmlFor=\"contained-button-file\">\r\n          <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" onChange={this.onSelectFile}  />\r\n            <Button className=\"App\" variant=\"contained\" component=\"span\">\r\n                  Upload\r\n        </Button>\r\n      </label>\r\n      </Grid>\r\n      </Card>\r\n    </Paper>\r\n          {/* <input type=\"file\" accept=\"image/*\" onChange={this.onSelectFile} /> */}\r\n       \r\n        <form onSubmit={this.saveBtnClick} encType='multipart/form-data'>\r\n    <Box sx={{ gridArea: 'main'}}>\r\n\r\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n        <Grid item xs={6}>\r\n        <CardMedia  sx={{ height: 180 }}> \r\n        {src  && (\r\n          <ReactCrop \r\n            src={src}\r\n            crop={crop}\r\n            ruleOfThirds\r\n            onImageLoaded={this.onImageLoaded}\r\n            onComplete={this.onCropComplete}\r\n            onChange={this.onCropChange}\r\n          />\r\n\r\n        )}\r\n        </CardMedia>\r\n        </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Box>\r\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>  \r\n          <Grid item xs={4}>\r\n           \r\n              {base64Image && (\r\n                <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={base64Image}  />\r\n                \r\n              )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}> \r\n        <Grid container wrap=\"nowrap\" spacing={2}>  \r\n          <Grid item xs={4}> \r\n              <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Required\"\r\n                defaultValue={this.state.value}\r\n                onChange={this.handleChange}\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}> \r\n        <Grid container wrap=\"nowrap\" spacing={2}>  \r\n          <Grid item xs={4}>              \r\n                    <Button type=\"submit\" variant=\"contained\">Submit</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>        \r\n        </form>\r\n        \r\n  </Box>\r\n</Container>\r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import  React,{useState,useEffect} from 'react'\r\nimport {Getdata} from '../services/api'\r\nimport {Container,Card,CardHeader,Box,Link,Button} from '@material-ui/core';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nimport {useHistory} from 'react-router-dom'\r\nimport '../App.css';\r\nfunction GetImages(props) {\r\n    const history=useHistory()\r\n    const intialState={\r\n        dataImg:'',\r\n        Img:[]\r\n      }\r\n    const [state,setState] = useState(intialState)\r\n    \r\n    // const imageData = context.getImageData(0, 0, cols, rows);\r\n    // const gray = tracking.Image.grayscale(imageData.data, cols, rows, true);\r\n    // const blurred4 = tracking.Image.blur(gray, cols, rows, 3);\r\n    // const blurred1 = new Array(blurred4.length / 4);\r\n    // for (var i = 0, j = 0; i < blurred4.length; i += 4, ++j) {\r\n    // blurred1[j] = blurred4[i];\r\n    // console.log('blurred1',blurred1);\r\n    // }\r\n    useEffect(()=>{\r\n        Getdata().then(data=>{\r\n            console.log(data);\r\n            \r\n            switch (data) {\r\n            case 2:\r\n                console.log('server error');\r\n                break;\r\n            default:\r\n                data.map(item=>{\r\n                    setState({\r\n                        ...state,\r\n                        img: item.imgs,\r\n                        \r\n                        })\r\n                })\r\n                setState({\r\n                    ...state,\r\n                    dataImg: data,\r\n                    \r\n                    })\r\n                  \r\n                break;\r\n            }\r\n        })\r\n    },[])\r\n\r\n    console.log(state.img);\r\n  \r\n    \r\n    if (state.dataImg) {\r\n        const dataElement =state.dataImg.map(images=>{\r\n            return( \r\n\r\n\r\n        <Container Key={images.id} maxWidth=\"sm\"className='mr-t'>       \r\n            <Card sx={{ maxWidth: 200 }}>\r\n            <Container maxWidth=\"sm\">       \r\n                <Box > \r\n                    <CardHeader \r\n                        title= {images.title}\r\n                    />\r\n                </Box> \r\n                <Box >  \r\n                    <GridList cellHeight={100}  > \r\n                    <img className=\"img-1\" src={images.imgs} alt=\"img\"/>\r\n                   \r\n                    </GridList>\r\n                </Box>  \r\n                \r\n            </Container>    \r\n            </Card>\r\n        </Container>            \r\n            )\r\n            })\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n             <Card>\r\n           {dataElement}\r\n           <Button type=\"submit\" variant=\"contained\"style={{marginLeft:20}}>\r\n           <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => {\r\n                        history.push('/') \r\n                        \r\n                    }}\r\n                    >\r\n                    Home\r\n            </Link>\r\n            </Button >\r\n            <Button type=\"submit\" variant=\"contained\" style={{marginLeft:20}}>\r\n           <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => {\r\n                        history.push('/Canvass') \r\n                        \r\n                    }}\r\n                    >\r\n                   Draw on the picture\r\n            </Link>\r\n            </Button>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}else {\r\n    return (\r\n      <div>Loading ....</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GetImages\r\n\r\n","import React, { Component } from 'react'\r\nimport{BrowserRouter,Route,Switch} from 'react-router-dom'\r\n import Home from './Home'\r\nimport Canvass from './Canvass'\r\n\r\n// import Measurements from './Measurements'\r\nimport GetImages from './GetImages'\r\n class Router extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n            <Switch>\r\n            \r\n            <Route path='/'exact  component={Home}/>\r\n            <Route path='/GetImages'  component={GetImages}/>\r\n            <Route path='/Canvass'  component={Canvass}/>\r\n           \r\n            </Switch>\r\n                \r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\nexport default Router","import React from 'react';\nimport './App.css';\n// import Home from './components/Home'\n import Home from './components/Home'\n//import HomImg from './components/HomImg'\n\nimport Router from './components/Router'\nfunction App() {\n  return (\n    <React.Fragment >   \n       \n     \n       <Router >\n       \n       </Router>\n        \n    \n    </React.Fragment>\n\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}